<?php

namespace UserFrosting\Sprinkle\Blog\Routes;

use Slim\App;
use Slim\Routing\RouteCollectorProxy;
use UserFrosting\Routes\RouteDefinitionInterface;
use UserFrosting\Sprinkle\Account\Authenticate\AuthGuard;
use UserFrosting\Sprinkle\Blog\Controller\BlogController;

class ClubRoutes implements RouteDefinitionInterface 
{
    public function register(App $app):void {
        $app->group('/blogs', function(RouteCollectorProxy $group) {
            $group->get('', [BlogController::class, 'displayBlogAdmin']);
        })->add(AuthGuard::class);
        
        $app->get('/blogs/b/{blog_slug}', [BlogController::class, 'getSingleBlogAdmin'])
            ->add(AuthGuard::class);
            
        $app->get('/blogs/b/{blog_slug}/view', [BlogController::class, 'genBlog']);
        
        
        $app->group('/api', function (RouteCollectorProxy $group) {
            $group->get('/blogs', [BlogController::class, 'getBlogs']);
            
            $group->post('/blogs', [BlogController::class, 'createBlog']);
        
            $group->put('/blogs/b/{blog_slug}', [BlogController::class, 'updateBlog']);
                
            $group->delete('/blogs/b/{blog_slug}', [BlogController::class, 'deleteBlog']);
            
            $group->get('/blogs/b/{blog_slug}', [BlogController::class, 'getBlog']);
            
            $group->get('/blogs/b/{blog_slug}/posts', [BlogController::class, 'getPosts']);
            
            $group->post('/blogs/b/{blog_slug}/posts', [BlogController::class, 'createPost']);
            
            $group->put('/blogs/b/{blog_slug}/posts/p/{post_id}', [BlogController::class, 'editPost']);
            
            $group->delete('/blogs/b/{blog_slug}/posts/p/{post_id}', [BlogController::class, 'deletePost']);
            
        })->add(AuthGuard::class);
        
        $app->group('/modals/blog', function (RouteCollectorProxy $group) {	
        
            $group->get('/create', [BlogController::class, 'getModalCreate']);
            
            $group->get('/edit', [BlogController::class, 'getModalEdit']);
             
            $group->get('/confirm-delete', [BlogController::class, 'getModalConfirmDelete']);
            
            $group->group('/post', function (RouteCollectorProxy $group) {
                $group->get('/create', [BlogController::class, 'getModalPostCreate']);
                
                $group->get('/edit', [BlogController::class, 'getModalPostEdit']);
                
                $group->get('/delete', [BlogController::class, 'getModalPostDelete']);
                
            });
        })->add(AuthGuard::class);
    }
}